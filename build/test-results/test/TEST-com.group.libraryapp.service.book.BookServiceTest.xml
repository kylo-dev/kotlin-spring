<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.group.libraryapp.service.book.BookServiceTest" tests="4" skipped="0" failures="0" errors="0" timestamp="2024-11-17T06:58:22" hostname="gyeom-MacBookPro.local" time="0.635">
  <properties/>
  <testcase name="실패한_책_대출하기()" classname="com.group.libraryapp.service.book.BookServiceTest" time="0.588"/>
  <testcase name="정상적인_책_대출하기()" classname="com.group.libraryapp.service.book.BookServiceTest" time="0.022"/>
  <testcase name="책_등록이_정상_동작한다()" classname="com.group.libraryapp.service.book.BookServiceTest" time="0.005"/>
  <testcase name="정상적인_책_반납하기()" classname="com.group.libraryapp.service.book.BookServiceTest" time="0.015"/>
  <system-out><![CDATA[15:58:19.857 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.group.libraryapp.service.book.BookServiceTest]: BookServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:58:19.934 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.group.libraryapp.LibraryAppApplication for test class com.group.libraryapp.service.book.BookServiceTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::               (v3.2.11)

2024-11-17T15:58:20.174+09:00  INFO 52307 --- [    Test worker] c.g.l.service.book.BookServiceTest       : Starting BookServiceTest using Java 17.0.10 with PID 52307 (started by gyeom in /Users/gyeom/Downloads/Kotlin_Spring_Library_Application/library-app)
2024-11-17T15:58:20.175+09:00  INFO 52307 --- [    Test worker] c.g.l.service.book.BookServiceTest       : No active profile set, falling back to 1 default profile: "default"
2024-11-17T15:58:20.513+09:00  INFO 52307 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-17T15:58:20.551+09:00  INFO 52307 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 33 ms. Found 3 JPA repository interfaces.
2024-11-17T15:58:20.794+09:00  INFO 52307 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-17T15:58:20.826+09:00  INFO 52307 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.10.Final
2024-11-17T15:58:20.844+09:00  INFO 52307 --- [    Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-17T15:58:20.970+09:00  INFO 52307 --- [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-17T15:58:20.989+09:00  INFO 52307 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-17T15:58:21.095+09:00  INFO 52307 --- [    Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:library user=USER
2024-11-17T15:58:21.096+09:00  INFO 52307 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-17T15:58:21.666+09:00  INFO 52307 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: 
    drop table if exists book cascade 
Hibernate: 
    drop table if exists user_loan_history cascade 
Hibernate: 
    drop table if exists users cascade 
Hibernate: 
    create table book (
        id bigint generated by default as identity,
        name varchar(255),
        primary key (id)
    )
Hibernate: 
    create table user_loan_history (
        is_return boolean not null,
        id bigint generated by default as identity,
        user_id bigint,
        book_name varchar(255),
        primary key (id)
    )
Hibernate: 
    create table users (
        age integer,
        id bigint generated by default as identity,
        name varchar(255),
        primary key (id)
    )
Hibernate: 
    alter table if exists user_loan_history 
       add constraint FK4fdwbhm2gfdc78adcb8gp8f68 
       foreign key (user_id) 
       references users
2024-11-17T15:58:21.696+09:00  INFO 52307 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-17T15:58:22.336+09:00  WARN 52307 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-17T15:58:22.507+09:00  INFO 52307 --- [    Test worker] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:library'
2024-11-17T15:58:22.541+09:00  INFO 52307 --- [    Test worker] c.g.l.service.book.BookServiceTest       : Started BookServiceTest in 2.529 seconds (process running for 3.225)
Hibernate: 
    insert 
    into
        book
        (name, id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        users
        (age, name, id) 
    values
        (?, ?, default)
Hibernate: 
    insert 
    into
        user_loan_history
        (book_name, is_return, user_id, id) 
    values
        (?, ?, ?, default)
Hibernate: 
    select
        b1_0.id,
        b1_0.name 
    from
        book b1_0 
    where
        b1_0.name=?
Hibernate: 
    select
        ulh1_0.id,
        ulh1_0.book_name,
        ulh1_0.is_return,
        ulh1_0.user_id 
    from
        user_loan_history ulh1_0 
    where
        ulh1_0.book_name=? 
        and ulh1_0.is_return=?
Hibernate: 
    insert 
    into
        book
        (name, id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        users
        (age, name, id) 
    values
        (?, ?, default)
Hibernate: 
    select
        b1_0.id,
        b1_0.name 
    from
        book b1_0 
    where
        b1_0.name=?
Hibernate: 
    select
        ulh1_0.id,
        ulh1_0.book_name,
        ulh1_0.is_return,
        ulh1_0.user_id 
    from
        user_loan_history ulh1_0 
    where
        ulh1_0.book_name=? 
        and ulh1_0.is_return=?
Hibernate: 
    select
        u1_0.id,
        u1_0.age,
        u1_0.name 
    from
        users u1_0 
    where
        u1_0.name=?
Hibernate: 
    insert 
    into
        user_loan_history
        (book_name, is_return, user_id, id) 
    values
        (?, ?, ?, default)
Hibernate: 
    select
        ulh1_0.id,
        ulh1_0.book_name,
        ulh1_0.is_return,
        ulh1_0.user_id 
    from
        user_loan_history ulh1_0
Hibernate: 
    insert 
    into
        book
        (name, id) 
    values
        (?, default)
Hibernate: 
    select
        b1_0.id,
        b1_0.name 
    from
        book b1_0
Hibernate: 
    insert 
    into
        book
        (name, id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        users
        (age, name, id) 
    values
        (?, ?, default)
Hibernate: 
    insert 
    into
        user_loan_history
        (book_name, is_return, user_id, id) 
    values
        (?, ?, ?, default)
Hibernate: 
    select
        u1_0.id,
        u1_0.age,
        u1_0.name 
    from
        users u1_0 
    where
        u1_0.name=?
Hibernate: 
    update
        user_loan_history 
    set
        book_name=?,
        is_return=?,
        user_id=? 
    where
        id=?
Hibernate: 
    select
        ulh1_0.id,
        ulh1_0.book_name,
        ulh1_0.is_return,
        ulh1_0.user_id 
    from
        user_loan_history ulh1_0
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
